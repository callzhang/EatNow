# Customise this file, documentation can be found here:
# https://github.com/KrauseFx/fastlane/tree/master/docs
# All available actions: https://github.com/KrauseFx/fastlane/blob/master/docs/Actions.md
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# By default, fastlane will send which actions are used
# No personal data is shared, more information on https://github.com/fastlane/enhancer
# Uncomment the following line to opt out
# opt_out_usage

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "1.49.0"

default_platform :ios


platform :ios do
  before_all do
    # ENV["SLACK_URL"] = "https://hooks.slack.com/services/..."
    
    # increment_build_number

    # xctool # run the tests of your app
end

desc "Runs all the tests"
lane :test do
    # snapshot
end

desc "Responsible for building and signing the app"
private_lane :build_app do |options|
    cocoapods

    # Download the provisioning profile for the app
    # sigh(output_path: "./fastlane/profiles") # Distribution Profile

    # Download the provisioning profile
    sigh(
      output_path: "./fastlane/profiles",
      app_identifier: "com.leizh.EatNow",
      adhoc: true
      )

    increment_build_number # version bump

    # use the UID of the newly created provisioning profile
    ENV["PROFILE_UUID"] = lane_context[SharedValues::SIGH_UDID]

    gym(
      workspace: "EatNow.xcworkspace",
      scheme: "EatNow"
      )
end


desc "Submit a new Beta Build to Apple TestFlight"
desc "This will also make sure the profile is up to date"
lane :beta do
    build_app

    pilot

    commit_version_bump(
      message: 'Build Version Bump by fastlane',
      force: true
      )

    build_number = Actions.lane_context[Actions::SharedValues::BUILD_NUMBER]
    add_git_tag(tag: "testflight-#{build_number}")

    push_to_git_remote
end

lane :fabric_test do 
 crashlytics(
    api_token: '6ec9eab6ca26fcd18d51d0322752b861c63bc348',
    build_secret: '62daabb6809cba6858b14be1c7271e7ecad241fda41e4bf70463be17fc210744',
    notifications: false
    )
end

lane :fabric do
 build_app

 crashlytics(
    api_token: '6ec9eab6ca26fcd18d51d0322752b861c63bc348',
    build_secret: '62daabb6809cba6858b14be1c7271e7ecad241fda41e4bf70463be17fc210744',
    notifications: true,
    groups: 'bujiong'
    )

 commit_version_bump(
    message: 'Build Version Bump by fastlane',
    force: true
    )

 build_number = Actions.lane_context[Actions::SharedValues::BUILD_NUMBER]
 add_git_tag(tag: "testflight-#{build_number}")

 push_to_git_remote
end

lane :fabric_silent do 
 build_app

 crashlytics(
    api_token: '6ec9eab6ca26fcd18d51d0322752b861c63bc348',
    build_secret: '62daabb6809cba6858b14be1c7271e7ecad241fda41e4bf70463be17fc210744',
    notifications: false,
    groups: 'bujiong'
    )

 commit_version_bump(
    message: 'Build Version Bump by fastlane',
    force: true
    )

 build_number = Actions.lane_context[Actions::SharedValues::BUILD_NUMBER]
 add_git_tag(tag: "testflight-#{build_number}")

 push_to_git_remote

end

desc "Deploy a new version to the App Store"
lane :deploy do
    # snapshot
    sigh
    gym # Build your app - more options available
    deliver(force: true)
    # frameit
end

  # You can define as many lanes as you want

  after_all do |lane|
    # This block is called, only if the executed lane was successful
    
    # slack(
    #   message: "Successfully deployed new App Update."
    # )
end

error do |lane, exception|
    # slack(
    #   message: exception.message,
    #   success: false
    # )
end
end



# More information about multiple platforms in fastlane: https://github.com/KrauseFx/fastlane/blob/master/docs/Platforms.md
# All available actions: https://github.com/KrauseFx/fastlane/blob/master/docs/Actions.md
